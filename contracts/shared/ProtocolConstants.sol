// SPDX-License-Identifier: Unlicense

pragma solidity =0.6.8;

/**
 * @dev Implementation of a singleton protocol constant contract.
 *
 * Allows all contracts in the system to utilize the protocol's constants.
 * As constant variables are not really included in the generated bytecode of
 * the contracts, multiple constants being redundantly available across the
 * contracts do not actually affect their ultimate size.
 */
abstract contract ProtocolConstants {
    /* ========== GENERAL ========== */

    // Max basis points
    uint256 internal constant _MAX_BASIS_POINTS = 100_00;

    // Grace Period for system initializations
    uint256 internal constant _GRACE_PERIOD = 24 hours;

    /* ========== BINARY OPTIONS ========== */

    // Maximum rate of return for ITM options in basis points, 2x
    uint256 internal constant _MAX_ITM_RATE = 200_00;

    // Protocol fee for ITM options in basis points, 1%
    uint256 internal constant _ITM_FEE = 1_00;

    // Settler fee when an option is settled by anyone else than the actual option creator
    uint256 internal constant _SETTLER_FEE = 20;

    // Maximum option size within the pool
    uint256 internal constant _MAX_OPTION_SIZE = 50;

    /* ========== DEV ========== */

    // Development BIOP Allocation
    uint256 internal constant _DEV_ALLOCATION = 70_000_000_000 * 1 ether;

    // Development BIOP Vesting Duration
    uint256 internal constant _VEST_DURATION = 2 * 365 days;

    /* ========== SWAP ========== */

    // Swap Allocation
    uint256 internal constant _SWAP_ALLOCATION = 300_000 * 1 ether;

    // Swap Duration
    uint256 internal constant _SWAP_DURATION = 90 days;

    /* ========== AIRDROP ========== */

    // Airdrop Allocation ?
    uint256 internal constant _AIRDROP_ALLOCATION = 50_000_000 * 1 ether;

    uint256 internal constant _AIRDROP_DURATION = 48 hours;

    /* ========== UTILIZATION ========== */

    // Utillization Rewards Allocation
    uint256 internal constant _UTILIZATION_ALLOCATION =
        650_000_000_000 * 1 ether;

    // Maximum liquidity utilization
    uint256 internal constant _MAX_UTILIZATION = 10_00;

    // The period for utilization rewards that resets the period's distributed rewards counter whenever passed
    uint256 internal constant _UTILIZATION_REWARD_PERIOD = 24 hours;

    // 0.02 BIOP
    uint256 internal constant _UTILIZATION_REWARD_PARTICIPATION = 0.02 ether;

    /* ========== TIERED ICO ========== */

    // Tiered ICO Allocation
    uint256 internal constant _ICO_ALLOCATION = 250_000_000_000 * 1 ether;

    // ICO Tiers
    uint256 internal constant _ICO_TIERS = 6;

    // ICO Duration
    uint256 internal constant _ICO_DURATION = 30 days;

    /* ========== BONDING CURVE AMM ========== */

    // AMM Bonding Curve Allocation
    uint256 internal constant _AMM_ALLOCATION = 250_000_000_000 * 1 ether;

    // Bancor Reserve Ratio Minimum
    uint32 internal constant _MIN_RESERVE_RATIO = 1;

    // Bancor Reserve Ratio Maximum
    uint32 internal constant _MAX_RESERVE_RATIO = 1000000;

    /* ========== DEX ========== */

    // DEX Reward Allocation
    uint256 internal constant _DEX_ALLOCATION = 80_000_000_000 * 1 ether;

    // DEX Reward Accuracy
    uint256 internal constant _DEX_REWARD_ACCURACY = 1e12;

    // DEX Block Threshold
    uint256 internal constant _DEX_REWARD_BLOCK_THRESHOLD = 6400 * 30; // NOTE: 6400 blocks per day on ETH

    /* ========== STAKING ========== */

    // Staking accuracy
    uint256 internal constant _DAO_STAKING_ACCURACY = 1e18;

    // The initial DAO staking reward duration
    uint256 internal constant _DAO_STAKING_INITIAL_DURATION = 7 days;

    // The block delay to prevent flash loan voting attacks
    uint256 internal constant _DAO_STAKING_DELAY = 5;

    /* ========== ORACLE ========== */

    // Initial Chainlink Staleness Tolerance:
    uint256 internal constant _INITIAL_ORACLE_TOLERANCE = 5;

    // Ether Address Representation
    address internal constant _ETHER =
        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;

    // ETH CHainlink Oracle
    address internal constant _ETH_MAINNET_CHAINLINK_ORACLE =
        0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419;

    /* ========== TREASURY ========== */

    // Treasury rewards to BiOpSet stakers
    uint256 internal constant _INITIAL_TREASURY_TAX = 10_00;

    /* ========== DAO ========== */

    // Tiers in basis points
    uint256 internal constant _TIER_FOUR_PORTION = 90_00;
    uint256 internal constant _TIER_THREE_PORTION = 75_00;
    uint256 internal constant _TIER_TWO_PORTION = 66_66;
    uint256 internal constant _TIER_ONE_PORTION = 50_00;

    /* ========== POOL ========== */

    // The early withdraw penalty of pools
    uint256 internal constant _EARLY_WITHDRAW_PENALTY = 1_00;

    /* ========== RATE CALCULATOR ========== */

    // The basic rate calculator's constant multiplier
    uint256 internal constant _BASIC_PAYOUT_MULTIPLIER = 2;
}
